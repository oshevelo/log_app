**** You can add your tips (hints) here ****

Ubuntu:
-Install pip3, DB:
    sudo apt-get update
    sudo apt-get -y install python3-pip

-Package install:
    source ~/HillelProjects/log_app/venv/bin/activate
    pip3 install -U  --upgrade pip
    pip3 install -r requirements.txt
    *pip3 freeze|grep -i psycopg2 >> requirements.txt

-Postgres:
    sudo apt-get install --reinstall libpq-dev
    sudo apt install postgresql postgresql-contrib
    pip3 install psycopg2

    DB console:
        sudo -u postgres psql
        create user test_admin with password 'admin1234';
        create database log_app owner test_admin;
        *ALTER USER user CREATEDB; // for tests

-DB:
    python3 manage.py makemigrations
    python3 manage.py migrate
    python3 manage.py migrate jet
    python3 manage.py createsuperuser (Ex: max max@max.com 1106)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Start local server:
    Net console:
        sudo apt install redis-server
        export PATH=$PATH:$HOME/Downloads/redis-stable/src
        redis-server --port 6379
    Another console:
        python3 manage.py runserver
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Start test:
    sudo apt install python-pytest
    pytest test_main.py -s
    or
    ./manage.py test
    or
    python3 manage.py test

JET:
    https://pypi.org/project/django-3-jet/
    Doc: https://docs.djangoproject.com/en/3.2/intro/tutorial07/

    pip3 install https://github.com/Barukimang/django-jet/archive/dev.zip
    or
    pip3 install django-3-jet==1.0.8

    python3 manage.py migrate jet

Rest:
    Install 'rest_framework':
        pip3 install djangorestframework
        pip3 install markdown       # Markdown support for the browsable API.
        pip3 install django-filter  # Filtering support

        http://127.0.0.1:8000/polls/question/

             python3 manage.py makemigrations
             python3 manage.py migrate

        https://www.django-rest-framework.org/tutorial/quickstart/
        https://www.django-rest-framework.org/api-guide/generic-views/#generic-views
        https://www.django-rest-framework.org/tutorial/1-serialization/

Additional commands:
    python3 manage.py startapp messenger - Add new module


Add avatar:
    python3 -m pip install Pillow

Add django_filters:
    pip3 install django-filter

Add WS:
    pip3 install channels
    pip3 install channels-redis

    Add redis
    wget http://download.redis.io/redis-stable.tar.gz
    tar xvzf redis-stable.tar.gz
    cd redis-stable
    make

    export PATH=$PATH:$HOME/Downloads/redis-stable/src
    redis-server --port 6379

Add static fields for Jet.js etc:
    Add in settings: STATIC_ROOT = 'public/static/'
    python3 manage.py collectstatic

!!!! nginx + supervisor + uwsgi + django !!!!
Add uWSGI:
    pip3 install uWSGI
    pip3 freeze|grep -i uwsgi >> requirements.txt

Add Nginx:
    sudo apt-get install nginx

    для того, чтобы Nginx смог работать с файлом uWSGI-сокета добавим его в группу вашего проекта,
     в Ubuntu это можно сделать так:
    sudo groupadd nginx_group
    sudo usermod -a -G nginx_group www-data

Add Supervisor:
    sudo apt-get install supervisor
    sudo service supervisor start
   * sudo service supervisor stop

Start nginx + supervisor+uwsgi+django:
    *max - <username>
    mkdir -p /home/max/HillelProjects/log_app/logs

    uWSGI:
        sudo ln -s /home/max/HillelProjects/log_app/supervisor/production.conf /etc/supervisor/conf.d/log_app.conf
        sudo supervisorctl update
        sudo supervisorctl status

        * sudo service supervisord stop
        * sudo supervisord -c /etc/supervisor/supervisord.conf

        * sudo service supervisord reload
        * sudo supervisorctl restart all

    Nginx:
        sudo ln -s /home/max/HillelProjects/log_app/nginx/production.conf /etc/nginx/sites-enabled/log_app.conf
        sudo nginx -t
        sudo nginx -s reload

        * ps -ef | grep nginx
        * sudo service nginx start