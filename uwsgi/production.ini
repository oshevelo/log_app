[uwsgi]
chdir=/home/max/HillelProjects/log_app
pidfile=/home/max/HillelProjects/log_app/uwsgi/log_app_uwsgi.pid
socket=/home/max/HillelProjects/log_app/uwsgi/log_app_uwsgi.sock
chmod-socket=666
virtualenv=/home/max/HillelProjects/log_app/venv
pythonpath=.
pythonpath=/home/max/HillelProjects/log_app
module=LogApp.wsgi:application
callable=app
master=true
processes=2
harakiri=60
buffer-size=65535
#daemonize=/home/max/HillelProjects/log_app/uwsgi/uwsgi.log


;chdir - путь до каталога с проектом;
;pidfile - путь до pid-файла;
;socket - файл UNIX или TCP сокета, рекомендую UNIX (работает немногим быстрее);
;chmod-socket - права на сокет-файл, позже добавим nginx в группу "<usergroup>" пользователя "<username>";
;virtualenv - путь до каталога окружения;
;pythonpath=. - добавим текущий от "chdir" каталог в "sys.path";
;pythonpath=<project_name> - и каталог с кодом Django-проекта тоже;
;module - наш wsgi-модуль (идет в поставке с Django-проектом)
;callable - WSGI имя;
;master - запуск в режиме master: отдельный процесс будет контроллировать воркер-процессы;
;processes - количество воркер-процессов, которые будут обрабатывать поступающие запросы;
;harakiri - количество секунд после которых подвисший процес будет перезапущен;
;buffer-size - максимальный размер буфера для запроса (заголовки, например cookie и query string), не включает в себя размер тела запроса.